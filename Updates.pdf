Our program has changed a lot through its graphical design.

We first planned to use keyboard listener for our user interface; however, we realized halfway through that there is a chance that one user would have more than 10 dominoes, and that would surpass the number of keys that would correspond appropriately with more than 10 dominoes. For example, we would not have a key that responds to domino #11 in a player's hand that is user friendly. We thought of using the period or some other letter to represent any domino that is greater than 10, but we found that using MouseAdapter would make it more user friendly and sophisiticated. We found the areas that the user could click to choose a domino and the user would be able to drag the domino to the area that the user desires to place the domino. The domino would stick if the tile fits correctly in the space (i.e. if one of the sides of the domino matches the previous domino). Also, we highlighted the side - left or right, to help the user see which side they were placing the tile on the board.

Another facet to our game is that we have both keyboard and mouse functions. The user would add another tile to their hand by pressing the space button. A problem that we ran into was the sizing of the dominoes when they were placed on the table of dominoes. When placing the dominoes at first, the dominoes would go off the screen. So, we decided to either implement a horizonal scrolling mechanism or just making the dominoes smaller. In the end, we decided to utilize keyboard events that when the user presses the left or right arrow keys, then the board containing the tiles will move to the left or the right depending on how the user wants to view the table. It ended up looking a lot better with the changes. 

A big issue that we faced was the fact that the tiles would not be placed correctly. For example, the first tile would be 6/6. However, if the player wanted to place a 6/5 domino (6 on top, 5 on the bottom) to the left of the tile, the domino would be configured to so that the bottom, which is 5, would be connected to the first tile of 6/6. This led to a lot of trial and error because we had to think of all the cases so that the tile would get flipped to the side that matched correctly with the first tile, second tile, etc. for both sides of the first domino that was set down.

We also had to factor in the scoring of the whole game. For our game, we decided that the game would consist of rounds that ended once a player gets 100 points (we chose this number arbitrarily). The player who gets 100 points first loses. If there were no tiles left to draw and/or no more moves to make on the table, the players would count the number of points that they have left on their remaining dominoes and add that to their existing score. We decided that making another window that counted the accumulated score would be the best so that both players would be able to see it regardless of who's turn it was. 

An issue that we faced was hiding each player's hands from one another. To do so, we decided to make a banner that covered a player's hand depending on whoever's turn it was. However, it made it complicated because right after a player's turn, the banner would switch, revealing their opponent's hand. In order to make sure that neither player saw each other's hand, we decided to make banners to cover both player's hands with a pop-up that says "Next Player". Once the next player presses "OK", the next player would be able to set a tile down.
